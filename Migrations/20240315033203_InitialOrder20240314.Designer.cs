// <auto-generated />
using System;
using ManyToManyCodeFirst.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ManyToManyCodeFirst.Migrations
{
    [DbContext(typeof(OrderContext))]
    [Migration("20240315033203_InitialOrder20240314")]
    partial class InitialOrder20240314
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ManyToManyCodeFirst.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoginName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            CompanyName = "Microsoft",
                            Email = "microsoft@test.com",
                            LoginName = "microsoft",
                            SecurityID = "A123456789"
                        },
                        new
                        {
                            CustomerId = 2,
                            CompanyName = "Amazon",
                            Email = "amazon@test.com",
                            LoginName = "amazon",
                            SecurityID = "A123456798"
                        },
                        new
                        {
                            CustomerId = 3,
                            CompanyName = "Google",
                            Email = "google@test.com",
                            LoginName = "google",
                            SecurityID = "A123456789"
                        });
                });

            modelBuilder.Entity("ManyToManyCodeFirst.Models.Order", b =>
                {
                    b.Property<short>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("OrderId"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<float?>("Freight")
                        .HasColumnType("real");

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("datetime2");

                    b.HasKey("OrderId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderId = (short)1,
                            CustomerId = 1,
                            Freight = 80f,
                            OrderDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderId = (short)2,
                            CustomerId = 2,
                            Freight = 80f,
                            OrderDate = new DateTime(2022, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderId = (short)3,
                            CustomerId = 3,
                            Freight = 80f,
                            OrderDate = new DateTime(2022, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderId = (short)4,
                            CustomerId = 1,
                            Freight = 80f,
                            OrderDate = new DateTime(2022, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ManyToManyCodeFirst.Models.OrderProduct", b =>
                {
                    b.Property<short>("OrderId")
                        .HasColumnType("smallint")
                        .HasColumnOrder(1);

                    b.Property<short>("ProductId")
                        .HasColumnType("smallint")
                        .HasColumnOrder(2);

                    b.Property<float>("Discount")
                        .HasColumnType("real");

                    b.Property<short>("Quantity")
                        .HasColumnType("smallint");

                    b.Property<float>("UnitPrice")
                        .HasColumnType("real");

                    b.HasKey("OrderId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderProducts");

                    b.HasData(
                        new
                        {
                            OrderId = (short)1,
                            ProductId = (short)1,
                            Discount = 0.1f,
                            Quantity = (short)1,
                            UnitPrice = 30000f
                        },
                        new
                        {
                            OrderId = (short)1,
                            ProductId = (short)3,
                            Discount = 0.1f,
                            Quantity = (short)1,
                            UnitPrice = 50000f
                        },
                        new
                        {
                            OrderId = (short)2,
                            ProductId = (short)2,
                            Discount = 0f,
                            Quantity = (short)1,
                            UnitPrice = 20000f
                        },
                        new
                        {
                            OrderId = (short)3,
                            ProductId = (short)1,
                            Discount = 0f,
                            Quantity = (short)2,
                            UnitPrice = 29000f
                        },
                        new
                        {
                            OrderId = (short)4,
                            ProductId = (short)2,
                            Discount = 0.15f,
                            Quantity = (short)1,
                            UnitPrice = 50000f
                        },
                        new
                        {
                            OrderId = (short)4,
                            ProductId = (short)3,
                            Discount = 0.15f,
                            Quantity = (short)1,
                            UnitPrice = 20000f
                        });
                });

            modelBuilder.Entity("ManyToManyCodeFirst.Models.Product", b =>
                {
                    b.Property<short>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("ProductId"));

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("UnitPrice")
                        .HasColumnType("real");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = (short)1,
                            ProductName = "iPhone",
                            UnitPrice = 30000f
                        },
                        new
                        {
                            ProductId = (short)2,
                            ProductName = "iMac",
                            UnitPrice = 50000f
                        },
                        new
                        {
                            ProductId = (short)3,
                            ProductName = "iPad",
                            UnitPrice = 20000f
                        });
                });

            modelBuilder.Entity("ManyToManyCodeFirst.Models.Order", b =>
                {
                    b.HasOne("ManyToManyCodeFirst.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("ManyToManyCodeFirst.Models.OrderProduct", b =>
                {
                    b.HasOne("ManyToManyCodeFirst.Models.Order", "Order")
                        .WithMany("OrderProducts")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ManyToManyCodeFirst.Models.Product", "Product")
                        .WithMany("OrderProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ManyToManyCodeFirst.Models.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("ManyToManyCodeFirst.Models.Order", b =>
                {
                    b.Navigation("OrderProducts");
                });

            modelBuilder.Entity("ManyToManyCodeFirst.Models.Product", b =>
                {
                    b.Navigation("OrderProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
